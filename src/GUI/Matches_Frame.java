/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Functions.Config;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableCellRenderer;
import Functions.DataEntryChecking;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
// import Functions.SharedData;

/**
 *
 * @author hosam
 */
public class Matches_Frame extends javax.swing.JFrame {

    //******************** Declaration of Variables, to be used for the Entire Class ********************//
 //   SharedData data = new SharedData();
    Object[][] _leaguesList ;
    private int ThiscurrentLeagueID;
    String currentLeague_Name;
    //*****************************************************************//
    
    /**
     * Creates new form Teams_Frame
     */
    
              //******************** Teams Table Renderer ********************//
        // Necessary For alligning Rows
    DefaultTableCellRenderer tblTeamsRenderer = new DefaultTableCellRenderer();
    

    
    public Matches_Frame(String currentLeague_Name, int currentLeagueID) {
        initComponents();
        this.setLocationRelativeTo(null);
        ThiscurrentLeagueID = currentLeagueID;
        this.currentLeague_Name = currentLeague_Name;
        // Calling the rows center aligning function ...
        // Aligning Rows to the center ...
        setTableCellAlignment(SwingConstants.CENTER);
        //******************** League Table Model ********************//
        // Necessary For Adding Rows
        // Method 1 For Adding
        
        try{
          
          updateTeamsTable();
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "Error in connection to DB");
            _leaguesList = new Object[][]{};
        }
        
            // Setting the label name for corresponding League Name
        jLabel_leagueName_Matches.setText(currentLeague_Name + " Matches");
        
        
        
        //******************** League Table Properties ********************//
        jTableTeams.getTableHeader().setFont(new Font("League", Font.BOLD,22));
        jTableTeams.setOpaque(false);
        jTableTeams.getTableHeader().setBackground(new Color(63, 16, 82));
        jTableTeams.getTableHeader().setForeground(new Color(255,255,255));
        jTableTeams.getColumnModel().getColumn(0).setPreferredWidth(150);
        jTableTeams.setBackground(new Color(244, 244, 244));
        //*****************************************************************//
        
        //******************** League Matches Properties ********************//
        jTableMatches.getTableHeader().setFont(new Font("League", Font.BOLD,22));
        jTableMatches.setOpaque(false);
        // Setting Colmuns Width
        jTableMatches.getColumnModel().getColumn(0).setPreferredWidth(10);
        jTableMatches.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTableMatches.getColumnModel().getColumn(2).setPreferredWidth(100);
        
        jTableMatches.getTableHeader().setBackground(new Color(63, 16, 82));
        jTableMatches.getTableHeader().setForeground(new Color(255,255,255));
        jTableMatches.setBackground(new Color(244, 244, 244));
        //*****************************************************************//
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_Matches_Frame = new javax.swing.JPanel();
        jPanel_MatchesClose = new javax.swing.JPanel();
        jLabel_MatchesClose = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTeams = new javax.swing.JTable(){

            public Component prepareRenderer(TableCellRenderer r, int rw, int col)
            {
                Component c = super.prepareRenderer(r, rw, col);
                c.setBackground(Color.WHITE);
                c.setFont(new Font("League", Font.BOLD,18));
                // Setting Alternating Colors
                if(rw %2 == 0)
                c.setBackground(new Color(225, 225, 225));
                // Setting Colors Of First 3 Champions Qualified Teams
                if((rw == 0 && col == 0) || (rw == 1 && col == 0) || (rw == 2 && col == 0))
                c.setBackground(new Color(66, 133, 244));

                // Setting Colors Of Second 2 2-Champions Qualified Teams
                if((rw == 3 && col == 0) || (rw == 4 && col == 0))
                c.setBackground(new Color(251, 150, 68));

                // Setting color of last 3 (Descending Teams) ...
                if((rw == jTableTeams.getRowCount() - 1 && col == 0) || (rw == jTableTeams.getRowCount() - 2 && col == 0) || (rw == jTableTeams.getRowCount() - 3 && col == 0))
                c.setBackground(new Color(243, 64, 54));
                return c;
            }
        };
        jLabel_leagueName_Matches = new javax.swing.JLabel();
        jTextField_Week = new javax.swing.JTextField();
        jTextField_Time = new javax.swing.JTextField();
        jTextField_homeTeam = new javax.swing.JTextField();
        jLabel_Week = new javax.swing.JLabel();
        jLabel_Time = new javax.swing.JLabel();
        jLabel_homeTeam = new javax.swing.JLabel();
        jButton_Delete = new javax.swing.JButton();
        jButton_Add = new javax.swing.JButton();
        jTextField_awayTeam = new javax.swing.JTextField();
        jLabel_awayTeam = new javax.swing.JLabel();
        jButton_Edit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableMatches = new javax.swing.JTable(){

            public Component prepareRenderer(TableCellRenderer r, int rw, int col)
            {
                Component c = super.prepareRenderer(r, rw, col);
                c.setBackground(Color.WHITE);
                c.setFont(new Font("League", Font.BOLD,18));
                // Setting Alternating Colors
                if(rw %2 == 0)
                c.setBackground(new Color(225, 225, 225));
                // Setting Colors Of First 3 Champions Qualified Teams
                if((rw == 0 && col == 0) || (rw == 1 && col == 0) || (rw == 2 && col == 0))
                c.setBackground(new Color(66, 133, 244));

                // Setting Colors Of Second 2 2-Champions Qualified Teams
                if((rw == 3 && col == 0) || (rw == 4 && col == 0))
                c.setBackground(new Color(251, 150, 68));

                // Setting color of last 3 (Descending Teams) ...
                if((rw == jTableTeams.getRowCount() - 1 && col == 0) || (rw == jTableTeams.getRowCount() - 2 && col == 0) || (rw == jTableTeams.getRowCount() - 3 && col == 0))
                c.setBackground(new Color(243, 64, 54));
                return c;
            }
        };

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1286, 720));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setSize(new java.awt.Dimension(1280, 720));
        setType(java.awt.Window.Type.POPUP);

        jPanel_Matches_Frame.setBackground(new java.awt.Color(209, 181, 234));
        jPanel_Matches_Frame.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(109, 28, 145), new java.awt.Color(109, 28, 145)));
        jPanel_Matches_Frame.setMinimumSize(new java.awt.Dimension(1280, 720));
        jPanel_Matches_Frame.setPreferredSize(new java.awt.Dimension(1280, 720));

        jPanel_MatchesClose.setBackground(new java.awt.Color(209, 181, 234));
        jPanel_MatchesClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel_MatchesCloseMouseReleased(evt);
            }
        });

        jLabel_MatchesClose.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel_MatchesClose.setForeground(new java.awt.Color(77, 20, 54));
        jLabel_MatchesClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_MatchesClose.setText("X");
        jLabel_MatchesClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel_MatchesCloseLayout = new javax.swing.GroupLayout(jPanel_MatchesClose);
        jPanel_MatchesClose.setLayout(jPanel_MatchesCloseLayout);
        jPanel_MatchesCloseLayout.setHorizontalGroup(
            jPanel_MatchesCloseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel_MatchesClose, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
        );
        jPanel_MatchesCloseLayout.setVerticalGroup(
            jPanel_MatchesCloseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel_MatchesClose, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jScrollPane1.setBackground(new java.awt.Color(63, 16, 82));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(109, 28, 145), new java.awt.Color(109, 28, 145), new java.awt.Color(109, 28, 145), new java.awt.Color(109, 28, 145)));
        jScrollPane1.setToolTipText("");
        jScrollPane1.setMinimumSize(new java.awt.Dimension(1024, 720));
        jScrollPane1.setOpaque(false);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(1024, 720));

        jTableTeams.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Coach Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableTeams.setFocusable(false);
        jTableTeams.setIntercellSpacing(new java.awt.Dimension(0, 0));
        jTableTeams.setMinimumSize(new java.awt.Dimension(1024, 720));
        jTableTeams.setPreferredSize(new java.awt.Dimension(1024, 720));
        jTableTeams.setRowHeight(30);
        jTableTeams.setSelectionForeground(new java.awt.Color(0, 120, 215));
        jTableTeams.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableTeams.setShowVerticalLines(false);
        jTableTeams.getTableHeader().setResizingAllowed(false);
        jTableTeams.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableTeams);

        jLabel_leagueName_Matches.setFont(new java.awt.Font("Cambria", 1, 38)); // NOI18N
        jLabel_leagueName_Matches.setForeground(new java.awt.Color(63, 16, 82));
        jLabel_leagueName_Matches.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_leagueName_Matches.setText("League");
        jLabel_leagueName_Matches.setPreferredSize(new java.awt.Dimension(130, 43));

        jTextField_Week.setEditable(false);
        jTextField_Week.setBackground(new java.awt.Color(209, 204, 192));
        jTextField_Week.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jTextField_Week.setForeground(new java.awt.Color(51, 51, 51));
        jTextField_Week.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_Week.setText("1");
        jTextField_Week.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.lightGray));
        jTextField_Week.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField_WeekMouseClicked(evt);
            }
        });

        jTextField_Time.setBackground(new java.awt.Color(209, 204, 192));
        jTextField_Time.setFont(new java.awt.Font("Cambria", 1, 22)); // NOI18N
        jTextField_Time.setForeground(new java.awt.Color(51, 51, 51));
        jTextField_Time.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_Time.setText("00:00!");
        jTextField_Time.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.lightGray));
        jTextField_Time.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_TimeFocusGained(evt);
            }
        });

        jTextField_homeTeam.setBackground(new java.awt.Color(209, 204, 192));
        jTextField_homeTeam.setFont(new java.awt.Font("Cambria", 1, 22)); // NOI18N
        jTextField_homeTeam.setForeground(new java.awt.Color(51, 51, 51));
        jTextField_homeTeam.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_homeTeam.setText("Team 1 Name!");
        jTextField_homeTeam.setToolTipText("");
        jTextField_homeTeam.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.lightGray));
        jTextField_homeTeam.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_homeTeamFocusGained(evt);
            }
        });

        jLabel_Week.setFont(new java.awt.Font("Cambria", 1, 28)); // NOI18N
        jLabel_Week.setForeground(new java.awt.Color(63, 16, 82));
        jLabel_Week.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_Week.setText("Week");

        jLabel_Time.setFont(new java.awt.Font("Cambria", 1, 28)); // NOI18N
        jLabel_Time.setForeground(new java.awt.Color(63, 16, 82));
        jLabel_Time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_Time.setText("Time");

        jLabel_homeTeam.setFont(new java.awt.Font("Cambria", 1, 28)); // NOI18N
        jLabel_homeTeam.setForeground(new java.awt.Color(63, 16, 82));
        jLabel_homeTeam.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_homeTeam.setText("Home Team");

        jButton_Delete.setBackground(new java.awt.Color(109, 28, 145));
        jButton_Delete.setFont(new java.awt.Font("Cambria", 1, 32)); // NOI18N
        jButton_Delete.setForeground(new java.awt.Color(240, 240, 240));
        jButton_Delete.setText("Delete");
        jButton_Delete.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton_Delete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DeleteActionPerformed(evt);
            }
        });

        jButton_Add.setBackground(new java.awt.Color(109, 28, 145));
        jButton_Add.setFont(new java.awt.Font("Cambria", 1, 32)); // NOI18N
        jButton_Add.setForeground(new java.awt.Color(240, 240, 240));
        jButton_Add.setText("Add");
        jButton_Add.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton_Add.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AddActionPerformed(evt);
            }
        });

        jTextField_awayTeam.setBackground(new java.awt.Color(209, 204, 192));
        jTextField_awayTeam.setFont(new java.awt.Font("Cambria", 1, 22)); // NOI18N
        jTextField_awayTeam.setForeground(new java.awt.Color(51, 51, 51));
        jTextField_awayTeam.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_awayTeam.setText("Team 2 Name!");
        jTextField_awayTeam.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.lightGray));
        jTextField_awayTeam.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_awayTeamFocusGained(evt);
            }
        });

        jLabel_awayTeam.setFont(new java.awt.Font("Cambria", 1, 28)); // NOI18N
        jLabel_awayTeam.setForeground(new java.awt.Color(63, 16, 82));
        jLabel_awayTeam.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_awayTeam.setText("Away Team");

        jButton_Edit.setBackground(new java.awt.Color(109, 28, 145));
        jButton_Edit.setFont(new java.awt.Font("Cambria", 1, 32)); // NOI18N
        jButton_Edit.setForeground(new java.awt.Color(240, 240, 240));
        jButton_Edit.setText("Edit");
        jButton_Edit.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton_Edit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EditActionPerformed(evt);
            }
        });

        jScrollPane2.setBackground(new java.awt.Color(63, 16, 82));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(109, 28, 145), new java.awt.Color(109, 28, 145), new java.awt.Color(109, 28, 145), new java.awt.Color(109, 28, 145)));
        jScrollPane2.setToolTipText("");
        jScrollPane2.setMinimumSize(new java.awt.Dimension(1024, 720));
        jScrollPane2.setOpaque(false);
        jScrollPane2.setPreferredSize(new java.awt.Dimension(1024, 720));

        jTableMatches.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Time", "Home Team", "Away Team"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMatches.setFocusable(false);
        jTableMatches.setIntercellSpacing(new java.awt.Dimension(0, 0));
        jTableMatches.setMinimumSize(new java.awt.Dimension(1024, 720));
        jTableMatches.setPreferredSize(new java.awt.Dimension(1024, 720));
        jTableMatches.setRowHeight(30);
        jTableMatches.setSelectionForeground(new java.awt.Color(0, 120, 215));
        jTableMatches.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableMatches.setShowVerticalLines(false);
        jTableMatches.getTableHeader().setResizingAllowed(false);
        jTableMatches.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTableMatches);

        javax.swing.GroupLayout jPanel_Matches_FrameLayout = new javax.swing.GroupLayout(jPanel_Matches_Frame);
        jPanel_Matches_Frame.setLayout(jPanel_Matches_FrameLayout);
        jPanel_Matches_FrameLayout.setHorizontalGroup(
            jPanel_Matches_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_Matches_FrameLayout.createSequentialGroup()
                .addGroup(jPanel_Matches_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_Matches_FrameLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(jPanel_Matches_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel_homeTeam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_awayTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel_Matches_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_homeTeam)
                            .addComponent(jTextField_awayTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel_Matches_FrameLayout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(jButton_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_Matches_FrameLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_Matches_FrameLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel_Matches_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_Matches_FrameLayout.createSequentialGroup()
                                .addComponent(jTextField_Week, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(79, 79, 79))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_Matches_FrameLayout.createSequentialGroup()
                                .addComponent(jLabel_Week, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68)))
                        .addGroup(jPanel_Matches_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_Matches_FrameLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jTextField_Time, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel_Time, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(86, 86, 86)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel_Matches_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_Matches_FrameLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel_Matches_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel_leagueName_Matches, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_Matches_FrameLayout.createSequentialGroup()
                        .addGap(0, 130, Short.MAX_VALUE)
                        .addGroup(jPanel_Matches_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_Matches_FrameLayout.createSequentialGroup()
                                .addComponent(jPanel_MatchesClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_Matches_FrameLayout.createSequentialGroup()
                                .addComponent(jButton_Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(jButton_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(110, 110, 110))))))
        );
        jPanel_Matches_FrameLayout.setVerticalGroup(
            jPanel_Matches_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_Matches_FrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_MatchesClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jLabel_leagueName_Matches, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel_Matches_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Edit)
                    .addComponent(jButton_Delete))
                .addGap(27, 27, 27))
            .addGroup(jPanel_Matches_FrameLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel_Matches_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Week, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_Time, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_Matches_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_Week, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Time, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_Matches_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_Matches_FrameLayout.createSequentialGroup()
                        .addComponent(jTextField_homeTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField_awayTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_Matches_FrameLayout.createSequentialGroup()
                        .addComponent(jLabel_homeTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_awayTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton_Add)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        // Removing inner borders inside the button
        jButton_Delete.setFocusPainted(false);
        // Removing inner borders inside the button
        jButton_Add.setFocusPainted(false);
        // Removing inner borders inside the button
        jButton_Edit.setFocusPainted(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Matches_Frame, javax.swing.GroupLayout.DEFAULT_SIZE, 1286, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Matches_Frame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel_MatchesCloseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel_MatchesCloseMouseReleased
        this.dispose();
    }//GEN-LAST:event_jPanel_MatchesCloseMouseReleased

    private void jButton_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DeleteActionPerformed
    
        //*****************************************************************//
        //********************** NOT IMPLEMENTED YET **********************//
        //*****************************************************************//
        
    /*
    try{  
            Connection con=DriverManager.getConnection( Config.hostName,
                 Config.username,Config.password);
            int row = jTableTeams.getSelectedRow();     // For Selected Row in the table
            // Variable containing Coach ID to be deleted ...
            int coachID = 0;
            // Getting the name of the team to be deleted from the DataBase & Table ...
            String teamName = jTableTeams.getValueAt(row, 0).toString();
            // SQL Statement & Query for selecting the coach ID which to be DELETED from COACH Table.
            Statement stmt0=con.createStatement();  
            ResultSet rs0=stmt0.executeQuery("SELECT coachID from team where NAME=" + "'"+teamName+"'");
            if(rs0.next())  // Necessary for the SQL Logic ...
                coachID = rs0.getInt("COACHID");
            // SQL Statement & Query for DELETING the team from the DataBase & Table ...
            Statement stmt=con.createStatement();  
            // Delete the (string) - in single quotations - using SQL Query ...
            int rs=stmt.executeUpdate("DELETE from team where NAME =" + "'"+teamName+"'");
            // SQL Statement & Query for DELETING the coach from the DataBase & Table ...
            Statement stmt2=con.createStatement();  
            int rs2=stmt2.executeUpdate("DELETE from coach where ID =" + coachID);
            con.close();
            // Updating & Showing the Teams Table Again ...
        try{
            updateTeamsTable();
            }
            catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "Error in connection to DB");
            _leaguesList = new Object[][]{};
            }
        // Restarting the Team_Frame JFrame ...
            this.dispose();
            try{
            Thread.sleep(250);
            new Matches_Frame(jLabel_leagueName_Matches.getText(), ThiscurrentLeagueID).show();
            }
            catch(InterruptedException e)
            {
                System.out.println(e.getMessage());
            }
        }catch(SQLException e){ 
                System.out.println(e);
                System.out.println("Error In Delete Team Function");
        }         
        */
    }//GEN-LAST:event_jButton_DeleteActionPerformed

    private void jButton_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AddActionPerformed
        String temp_Week = jTextField_Week.getText();
        String temp_Time = jTextField_Time.getText();
        String temp_homeTeam = jTextField_homeTeam.getText();
        String temp_awayTeam = jTextField_awayTeam.getText();
        DataEntryChecking t1 = new DataEntryChecking();
        // Checking For Wrong Team Name Entry
        if(!(t1.isValid_Week(temp_Week)))
        {
            JOptionPane.showMessageDialog(this,"Invalid Week ... Please Choose a Valid Week", "Data Entry Error",JOptionPane.ERROR_MESSAGE);
            jTextField_Time.setForeground(new Color(51,51,51));
            jTextField_homeTeam.setForeground(new Color(51,51,51));
            jTextField_awayTeam.setForeground(new Color(51,51,51));
            // Wrong Entry Here
            jTextField_Week.setForeground(Color.red);
            jTextField_Week.setText("0 - 100!");
            return;
        }
        // Checking For Wrong Year Entry
        if(!(t1.isValid_Time(temp_Time)))
        {
            JOptionPane.showMessageDialog(this,"Invalid Time ... Please Choose a Valid Time", "Data Entry Error",JOptionPane.ERROR_MESSAGE);
            jTextField_Week.setForeground(new Color(51,51,51));
            jTextField_homeTeam.setForeground(new Color(51,51,51));
            jTextField_awayTeam.setForeground(new Color(51,51,51));
            // Wrong Entry Here
            jTextField_Time.setForeground(Color.red);
            jTextField_Time.setText("00:00!");
            return;
        }
        // Checking For Wrong Coach First Name Entry
        if(!(t1.isValid_Team(temp_homeTeam)))
        {
            JOptionPane.showMessageDialog(this,"Invalid Team Name ... Please choose an existing team", "Data Entry Error",JOptionPane.ERROR_MESSAGE);
            jTextField_Week.setForeground(new Color(51,51,51));
            jTextField_Time.setForeground(new Color(51,51,51));
            jTextField_awayTeam.setForeground(new Color(51,51,51));
            // Wrong Entry Here
            jTextField_homeTeam.setForeground(Color.red);
            jTextField_homeTeam.setText("Team 1 Name!");
            return;
        }
        // Checking For Wrong Coach Last Name Entry
        if(!(t1.isValid_Team(temp_awayTeam)))
        {
            JOptionPane.showMessageDialog(this,"Invalid Team Name ... Please choose an existing team", "Data Entry Error",JOptionPane.ERROR_MESSAGE);
            jTextField_Week.setForeground(new Color(51,51,51));
            jTextField_Time.setForeground(new Color(51,51,51));
            jTextField_homeTeam.setForeground(new Color(51,51,51));
            // Wrong Entry Here
            jTextField_awayTeam.setForeground(Color.red);
            jTextField_awayTeam.setText("Team 2 Name!");
            return;
        }
        try{
            // addNewTeam(jTextField_Week.getText(), Integer.parseInt(jTextField_Time.getText()), jTextField_homeTeam.getText(), jTextField_awayTeam.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e);
            return ;
        }
        this.dispose();
        try{
        Thread.sleep(250);
        new Matches_Frame(this.currentLeague_Name, ThiscurrentLeagueID).show();
        }
        catch(InterruptedException e)
        {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton_AddActionPerformed

    private void jButton_EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EditActionPerformed
        //*****************************************************************//
        //********************** NOT IMPLEMENTED YET **********************//
        //*****************************************************************//
    }//GEN-LAST:event_jButton_EditActionPerformed

    private void jTextField_awayTeamFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_awayTeamFocusGained
        jTextField_awayTeam.setText("");
    }//GEN-LAST:event_jTextField_awayTeamFocusGained

    private void jTextField_homeTeamFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_homeTeamFocusGained
        jTextField_homeTeam.setText("");
    }//GEN-LAST:event_jTextField_homeTeamFocusGained

    private void jTextField_TimeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_TimeFocusGained
        jTextField_Time.setText("");
    }//GEN-LAST:event_jTextField_TimeFocusGained

    private void jTextField_WeekMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField_WeekMouseClicked
        jTextField_Week.setEditable(true);
        jTextField_Week.setText("");
    }//GEN-LAST:event_jTextField_WeekMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Matches_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Matches_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Matches_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Matches_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
    //    java.awt.EventQueue.invokeLater(new Runnable() {
    //        public void run() {
    //            new Teams_Frame().setVisible(true);
    //        }
    //   });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
    //    java.awt.EventQueue.invokeLater(new Runnable() {
    //        public void run() {
    //            new Teams_Frame().setVisible(true);
    //        }
    //   });
    }
    
    
    
        private void setTableCellAlignment(int alignment) {
            tblTeamsRenderer.setHorizontalAlignment(alignment);
            for (int i=0; i<jTableTeams.getColumnCount();i++){
               jTableTeams.setDefaultRenderer(jTableTeams.getColumnClass(i),tblTeamsRenderer);
               }
             // repaint to show table cell changes
            jTableTeams.updateUI();
        }
    
    
            private void addNewTeam(String teamName, int teamYear, String firstName, String lastName) throws Exception{
        try{  
            Connection con=DriverManager.getConnection( Config.hostName,
                 Config.username,Config.password);  
            Statement stmt=con.createStatement();  
            ResultSet rs=stmt.executeQuery("SELECT MAX(ID) FROM TEAM");  
            int id =  0;
            while(rs.next()) {
               id = rs.getInt(1) + 1 ;
            }
            addNewCoach(firstName, lastName);
            System.out.println(id);
            int insertingResult =stmt.executeUpdate("insert into TEAM values(" +id+ ",'" +teamName+ "'," +teamYear+ "," +ThiscurrentLeagueID+ "," +id+ ")" );  
            con.close(); 
        }catch(Exception e){ 
             System.out.println(e);
             System.out.println("HERE");
             throw e;
        }  
    }
            
            
        private void addNewCoach(String firstName, String lastName) throws Exception
        {
            // Removing White Spaces ...
            firstName = firstName.trim();
            lastName = lastName.trim();
            try{
                Connection con=DriverManager.getConnection( Config.hostName,
                Config.username,Config.password);
                Statement stmt=con.createStatement();  
                ResultSet rs=stmt.executeQuery("SELECT MAX(ID) FROM COACH");  
                int id =  0;
                while(rs.next()) {
                id = rs.getInt(1) + 1 ;
                }
                int insertingResult =stmt.executeUpdate("insert into COACH values(" +id+ ",'" +firstName+ "','" +lastName+ "'," + 10 + ")"  );  
                con.close(); 
            }catch(Exception e)
                { 
                System.out.println(e);
                System.out.println("Error In Adding Coach Function");
                throw e;
                }  
        }
            
            
            
            public void updateTeamsTable() throws Exception{
       DefaultTableModel tblLeagueModel = (DefaultTableModel)jTableTeams.getModel();
        Object[][] _testData ;
        try{
           _testData = getTeams();
        }catch(Exception e){
          throw e ;
        }     
        for (int i = 0 ;i < tblLeagueModel.getRowCount() ; i++ ){
            tblLeagueModel.removeRow(i);
        }
        
        for(int i=0; _testData[i][0] != null; i++)
            tblLeagueModel.addRow(_testData[i]);
   }
            
            
    private Object[][] getTeams() throws Exception{
        try{  
            Connection con=DriverManager.getConnection( Config.hostName,
                 Config.username,Config.password);  
            Statement stmt=con.createStatement();  
            ResultSet rs=stmt.executeQuery("select * from team where LEAGUEID =" +ThiscurrentLeagueID);  
            Object[][] teamsList = new Object[1000][1000];
            int index = 0 ;
            int coachID = 0;
            while(rs.next()) { 
                teamsList[index][0] = rs.getString("name");
                coachID = rs.getInt("COACHID");
                Statement stmt2=con.createStatement(); 
                ResultSet rs2=stmt2.executeQuery("select * from coach where ID =" +coachID);
                while(rs2.next()) { 
                    teamsList[index][1] = rs2.getString("FIRSTNAME") + " " + rs2.getString("LASTNAME");
                }
                index ++ ;
             }
            con.close(); 
            return teamsList;
        }catch(SQLException e){ 
                System.out.println(e);
                System.out.println("Error In Update Teams Function");
                throw e;
        }  
   }
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Add;
    private javax.swing.JButton jButton_Delete;
    private javax.swing.JButton jButton_Edit;
    private javax.swing.JLabel jLabel_MatchesClose;
    private javax.swing.JLabel jLabel_Time;
    private javax.swing.JLabel jLabel_Week;
    private javax.swing.JLabel jLabel_awayTeam;
    private javax.swing.JLabel jLabel_homeTeam;
    private javax.swing.JLabel jLabel_leagueName_Matches;
    private javax.swing.JPanel jPanel_MatchesClose;
    private javax.swing.JPanel jPanel_Matches_Frame;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableMatches;
    private javax.swing.JTable jTableTeams;
    private javax.swing.JTextField jTextField_Time;
    private javax.swing.JTextField jTextField_Week;
    private javax.swing.JTextField jTextField_awayTeam;
    private javax.swing.JTextField jTextField_homeTeam;
    // End of variables declaration//GEN-END:variables
}
